# vxd/config/cmake/VXDConfig_export.cmake.in
#   also configured by CMake to
# @PROJECT_BINARY_DIR@/config/cmake/export/VXDConfig.cmake
#
# This CMake module is configured by VXD's build process to export the
# project settings for use by client projects.  A client project may
# find VXD and include this module using the FIND_PACKAGE command:
#
#  find_package(VXD)
#
# After this command executes, projects may test VXD_FOUND for whether
# VXD has been found.  If so, the settings listed below in this file
# have been loaded and are available for use.
#
# Typically, a client project will include UseVXD.cmake from the
# directory specified by the VXD_CMAKE_DIR setting:
#
#  find_package(VXD)
#  if(VXD_FOUND)
#    include(${VXD_CMAKE_DIR}/UseVXD.cmake)
#  else()
#    message("VXD_DIR should be set to the VXD build directory.")
#  endif()
#
# See vxd/config/cmake/UseVXD.cmake for details.
#

# The build settings file.
set(VXD_BUILD_SETTINGS_FILE "@VXD_EXPORT_BUILD_SETTINGS_FILE@")

# The VXD library directory.
set(VXD_LIBRARY_DIR "@CMAKE_INSTALL_PREFIX@/lib")

# The VXD CMake support directory.
# Clients projects should not use the Find*.cmake files in this directory.
set(VXD_CMAKE_DIR "@CMAKE_INSTALL_PREFIX@/share/vxd/cmake")

# VXD Configuration options. You don't have to build with the same options as VXD, but it often helps.
set(VXD_BUILD_SHARED_LIBS "@VXD_BUILD_SHARED_LIBS@")
set(VXD_BUILD_TESTS "@BUILD_TESTS@")
set(VXD_BUILD_EXAMPLES "@BUILD_EXAMPLES@")
set(VXD_EXTRA_CMAKE_CXX_FLAGS "@VXD_EXTRA_CMAKE_CXX_FLAGS@")
set(VXD_EXTRA_CMAKE_C_FLAGS "@VXD_EXTRA_CMAKE_C_FLAGS@")
set(VXD_EXTRA_CMAKE_EXE_LINKER_FLAGS "@VXD_EXTRA_CMAKE_EXE_LINKER_FLAGS@")
set(VXD_EXTRA_CMAKE_MODULE_LINKER_FLAGS "@VXD_EXTRA_CMAKE_MODULE_LINKER_FLAGS@")
set(VXD_EXTRA_CMAKE_SHARED_LINKER_FLAGS "@VXD_EXTRA_CMAKE_SHARED_LINKER_FLAGS@")

# VXD has many parts that are optional, depending on selections made
# when building.  The stanzas below give a consistent (though
# pedantic) interface to each part.  Clients use these settings to
# determine whether a part was built (_FOUND), where its headers are
# located (_INCLUDE_DIR) and in some cases what libraries must be
# linked to use the part (_LIBRARIES).  Most client projects will
# likely still refer to individual VXD libraries such as vcl, for
# example, by hard-wired "vcl" instead of using the variable
# VXD_VCL_LIBRARIES, but it is there just in case.

set(VXD_CONTRIB_FOUND "@BUILD_CONTRIB@")
# VXD contrib has subdirectories handled independently below
# VXD contrib has many libraries

set(VXD_BRL_FOUND "@BUILD_BRL@")
set(VXD_BRL_INCLUDE_DIR "@BRL_INSTALL_INCLUDE_DIR@")
# VXD BRL has many libraries

# Tell UseVXD.cmake that VXDConfig.cmake has been included.
set(VXD_CONFIG_CMAKE 1)

# Import VXD targets.
if(NOT VXD_TARGETS_IMPORTED)
  set(VXD_TARGETS_IMPORTED 1)
  include("${CMAKE_CURRENT_LIST_DIR}/VXDTargets.cmake")
endif()
